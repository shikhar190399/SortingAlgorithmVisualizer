{"version":3,"sources":["components/Bar.js","components/Header.js","components/Container.js","App.js","index.js"],"names":["Bar","props","id","index","style","height","width","backgroundColor","textAlign","padding","fontSize","Header","useState","speed","setSpeed","useEffect","setTime","Navbar","expand","bg","variant","type","className","onClick","window","location","reload","disabled","loading","genRandomArray","Slider","defaultValue","onChange","event","value","step","marks","min","max","flexGrow","flexBasis","marginRight","marginLeft","color","Nav","bubbleSort","insertionSort","mergeSort","selectionSort","quickSort","Stopwatch","require","Container","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","sec","toFixed","setLoading","getRandomArray","len","temp","i","push","random","size","setSize","arr","setArray","lap","setLap","toString","setCustom","notify","sort","a","b","time","toast","closeToast","fontWeight","tmp","text","comp","swaps","sw","slice","length","j","check","newArray","x","y","setTimeout","document","getElementById","stop","delta","read","ceil","k","key","w","merge","s","e","m","array","merging","pivotPoints","Set","quick","has","add","pivot","pivotPoint","map","item","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.427194f5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Bar = (props) => {\n    return (\n        <div  id={`bar${props.index}`} style={{height:props.height*10+30,width:\"50px\",backgroundColor: \"#FFBCBC\"}}>\n            <div style={{height:\"30px\",width:\"50px\",backgroundColor: \"#D83A56\",textAlign:\"center\",padding:\"2px\",fontSize:\"large\"}}><stong>{props.height}</stong></div>\n        </div>\n    )\n}\n\nexport default Bar\n","import React ,{useState,useEffect} from 'react'\nimport {Navbar,Nav,Container} from \"react-bootstrap\"\nimport Slider from \"@material-ui/core/Slider\";\n\n\nconst Header = (props) => {\n\n    \n    const [speed,setSpeed] = useState(3);\n    \n    function refreshPage() {\n        window.location.reload(false);\n      }\n\n    useEffect(() => {\n       props.setTime(500/speed);\n    }, [speed])\n   \n\n    return (\n        <>\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\" style={{height:\"10%\"}}>\n            <Container >\n            <button type=\"button\" className=\"btn btn-primary btn-lg mr-2\"   onClick={() => refreshPage()}><i className=\"fas fa-redo\"></i></button>\n            <button type=\"button\" className=\"btn btn-primary btn-lg mr-2\" disabled={props.loading ? true : false} onClick={() => props. genRandomArray()}>Generate</button>\n            <Slider\n                key={`slider-${speed}`}\n                defaultValue={speed}\n                onChange={(event, value) => setSpeed(value)}\n                aria-labelledby=\"discrete-slider\"\n                step={1}\n                marks\n                min={1}\n                max={5}\n                style={{ flexGrow: 1, flexBasis: \"100%\" ,marginRight: \"2%\",marginLeft: \"2%\",color: \"white\"}}\n            />\n            <Nav className=\"me-auto\" >\n            <button type=\"button\" className=\"btn btn-danger btn-lg  mr-3\" disabled={props.loading ? true : false} onClick={() => props. bubbleSort()}>Bubble</button>\n            <button type=\"button\" className=\"btn btn-danger btn-lg mr-3\" disabled={props.loading ? true : false} onClick={() => props. insertionSort()}>Insertion</button>\n            <button type=\"button\" className=\"btn btn-danger btn-lg mr-3\" disabled={props.loading ? true : false}  onClick={() => props. mergeSort()}>Merge</button>\n            <button type=\"button\" className=\"btn btn-danger btn-lg mr-3\" disabled={props.loading ? true : false}  onClick={() => props. selectionSort()}>Selection</button>\n            <button type=\"button\" className=\"btn btn-danger btn-lg\" disabled={props.loading ? true : false} onClick={() => props. quickSort()}>Quick</button>\n            </Nav>\n            </Container>\n        </Navbar>\n        </>\n    )\n}\n\nexport default Header\n","import React,{useEffect, useState} from 'react'\nimport Bar from './Bar';\nimport Header from \"./Header\"\nimport { toast} from \"react-toastify\";\nconst Stopwatch = require('statman-stopwatch');\n\nconst Container = () => {\n\n    function millisToMinutesAndSeconds(millis) {\n        var minutes = Math.floor(millis / 60000);\n        var seconds = ((millis % 60000) / 1000);\n        var sec=(seconds%10).toFixed(0);\n        seconds = seconds.toFixed(0);\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds+\":\"+sec +\"s\";\n      }\n\n   const [loading,setLoading]=useState(false);\n\n    const getRandomArray = (len) => {\n        let temp=[];\n        for(let i=0;i<len;i++)\n        temp.push(Math.floor(Math.random()*50)+1);\n        return temp;\n    }\n\n    const genRandomArray = () => {\n        let tmp=getRandomArray(20);\n        setSize(20);\n        setArray(tmp);\n        let text = tmp.toString();\n        setCustom(text);\n    }\n    \n    const [size,setSize] = useState(20);\n    const [arr,setArray] = useState(getRandomArray(size));\n    const [lap,setLap] = useState(400);\n    const [custom,setCustom] = useState(arr.toString());\n   \n    const notify=(sort,a,b,time)=>toast(({ closeToast }) =>\n    <div> \n        <div style={{fontWeight: '800'}}>Hurray {sort} Sort Completed!!! 😃</div>\n        <div style={{fontWeight: '800'}} >Comparsions {a}</div>\n        <div style={{fontWeight: '800'}} >Swaps {b}</div>\n        <div style={{fontWeight: '800'}} >Time {time}</div>\n    </div>);\n\n    const setTime = (time) => {\n       setLap(time);\n    }\n\n    const bubbleSort =() => {\n        setLoading(true);\n        let comp=0,swaps=0;\n        const sw = new Stopwatch(true);\n        let tmp=arr.slice();\n        let time=0;\n        for(let i=0;i<tmp.length;i++)\n        {\n            for(let j=0;j<tmp.length-i-1;j++)\n            {\n                comp++;\n                let check = 0;\n                if(tmp[j+1]<tmp[j])\n                {\n                    let temp=tmp[j];\n                    tmp[j]=tmp[j+1];\n                    tmp[j+1]=temp;\n                    check=1;\n                }\n                let newArray=tmp.slice();\n                let x=j,y=i;\n                setTimeout(() => {\n                    if(x)\n                    document.getElementById(`bar${x-1}`).style.backgroundColor = \"#FFBCBC\";\n                    document.getElementById(`bar${x}`).style.backgroundColor = \"#548CA8\";\n                    document.getElementById(`bar${x+1}`).style.backgroundColor = \"#548CA8\";\n                    if(x===tmp.length-y-2 && check==0){\n                        document.getElementById(`bar${x}`).style.backgroundColor = \"#FFBCBC\";\n                        document.getElementById(`bar${x+1}`).style.backgroundColor = \"#78DEC7\";\n                    }   \n                }, time+=lap);\n                if(check){\n                    swaps++;\n                    setTimeout(() => {\n                        setArray(newArray); \n                        document.getElementById(`bar${x}`).style.backgroundColor = \"#E93B81\";\n                        document.getElementById(`bar${x+1}`).style.backgroundColor = \"#E93B81\";\n                        if(x===tmp.length-y-2){\n                            document.getElementById(`bar${x}`).style.backgroundColor = \"#FFBCBC\";\n                            document.getElementById(`bar${x+1}`).style.backgroundColor = \"#78DEC7\";\n                        } \n                    }, time+=lap);\n                }\n            }\n        }\n        setTimeout(() => {\n            for(var i=0;i<size;i++)\n               document.getElementById(`bar${i}`).style.backgroundColor = \"#FFBCBC\";\n               setLoading(false);\n               sw.stop();\n               const delta = sw.read();\n               notify('Bubble',comp,swaps,millisToMinutesAndSeconds(Math.ceil(delta)) ); \n        }, time+lap);\n       \n    }\n\n\n    const insertionSort = () => {  \n        let comp=0,swaps=0;\n        setLoading(true); \n        const sw = new Stopwatch(true);\n        let tmp=arr.slice();\n        let time=0;\n\n        for(var i=1;i<size;i++)\n         {\n             for(var j=i;j>0;j--)\n             {   \n                comp++; \n                if(tmp[j]<tmp[j-1])\n                   {  \n                        let temp=tmp[j];\n                        tmp[j]=tmp[j-1];\n                        tmp[j-1]=temp;\n                        swaps++;\n                   }\n                else\n                   break;\n                let newArray=tmp.slice();\n                let x=j,y=i;\n                setTimeout(() => {\n                    for(var k=0;k<=y;k++)\n                         document.getElementById(`bar${k}`).style.backgroundColor = \"#78DEC7\";     \n                    document.getElementById(`bar${x-1}`).style.backgroundColor =  \"#548CA8\";\n                    document.getElementById(`bar${x}`).style.backgroundColor = \"#548CA8\";   \n                }, time+=lap);\n\n                setTimeout(() => {\n                    setArray(newArray); \n                    document.getElementById(`bar${x}`).style.backgroundColor = \"#E93B81\";\n                    document.getElementById(`bar${x-1}`).style.backgroundColor = \"#E93B81\";\n                }, time+=lap);\n\n             }\n         }\n         setTimeout(() => {\n            for(var i=0;i<size;i++)\n               document.getElementById(`bar${i}`).style.backgroundColor = \"#FFBCBC\";\n               sw.stop();\n               const delta = sw.read();\n               notify('Insertion',comp,swaps,millisToMinutesAndSeconds(Math.ceil(delta)) ); \n            setLoading(false);    \n        }, time+lap);\n    }\n    \n   \n    const selectionSort = () => {  \n        const sw = new Stopwatch(true);\n        setLoading(true);\n        let tmp=arr.slice();\n        let time=0;\n        let comp=0,swaps=0;\n\n        for(var i=0;i<size;i++)\n         {   let value=tmp[i];\n             let key=i;\n             let w=i;\n             for(var j=i+1;j<size;j++)\n             {    \n                comp++;\n                if(value>tmp[j])\n                   {  \n                        key=j;\n                        value=tmp[j];\n                   }\n            \n                let x=j,y=key;\n                setTimeout(() => {\n                    for(var k=w;k<size;k++)\n                    document.getElementById(`bar${k}`).style.backgroundColor = \"#FFBCBC\";\n                    document.getElementById(`bar${y}`).style.backgroundColor =  \"#548CA8\";\n                    document.getElementById(`bar${x}`).style.backgroundColor = \"#2F5D62\";\n                    document.getElementById(`bar${w}`).style.backgroundColor =  \"#E93B81\";\n                }, time+=lap);\n\n            }   \n             \n             if(key!=i){\n             let temp=tmp[i];\n             tmp[i]=value;\n             tmp[key]=temp;\n             swaps++;}\n            let newArray=tmp.slice();\n            setTimeout(() => {\n                document.getElementById(`bar${w}`).style.backgroundColor =  \"#78DEC7\";\n                setArray(newArray);    \n            }, time+=lap);\n         }\n           \n         setTimeout(() => {\n            for(var i=0;i<size;i++)\n               document.getElementById(`bar${i}`).style.backgroundColor = \"#FFBCBC\";\n               sw.stop();\n               const delta = sw.read();\n               notify('Selection',comp,swaps,millisToMinutesAndSeconds(Math.ceil(delta)) ); \n            setLoading(false);   \n        }, time+lap);\n    }\n\n\n    const mergeSort = () => {  \n        const sw = new Stopwatch(true);\n        setLoading(true);\n        let tmp=arr.slice();\n        let time=0;\n        let comp=0,swaps=0;\n    \n        const merging=(s,e)=>{\n               let m=Math.floor((s+e)/2);\n               let j=m+1;\n               let i=s;\n               let k=i;\n               let array=arr.slice();\n               while(i<=m && j<=e){\n                   comp++;\n                  if(tmp[i]<=tmp[j]){\n                   array[k++]=tmp[i++];\n                  }\n                  else {\n                    array[k++]=tmp[j++];\n                    swaps++;\n                  }\n               }\n              \n            while(i<=m)array[k++]=tmp[i++];\n            while(j<=e)array[k++]=tmp[j++];\n            for(let k=s;k<=e;k++){\n                tmp[k]=array[k];\n            }\n\n            let newArray=tmp.slice();\n            setTimeout(() => {\n                for(var k=0;k<size;k++)\n                document.getElementById(`bar${k}`).style.backgroundColor =  \"#FFBCBC\";\n\n                for(var k=s;k<=m;k++)\n                document.getElementById(`bar${k}`).style.backgroundColor =  \"red\";\n                for(var k=m+1;k<=e;k++)\n                document.getElementById(`bar${k}`).style.backgroundColor =  \"#0C4271\";\n                setArray(newArray);    \n            }, time+=lap);\n            \n\n        }\n        \n        const merge = (s,e) => {  \n            if(s>=e)return;\n          let m=Math.floor((s+e)/2);\n           merge(s,m);\n           merge(m+1,e);\n           merging(s,e);\n        }\n        \n        merge(0,tmp.length-1);\n           \n         setTimeout(() => {\n            for(var i=0;i<size;i++)\n               document.getElementById(`bar${i}`).style.backgroundColor = \"#FFBCBC\";\n               sw.stop();\n               const delta = sw.read();\n               notify('Merge',comp,swaps,millisToMinutesAndSeconds(Math.ceil(delta)) ); \n            setLoading(false);   \n        }, time+lap);\n    }\n\n\n    const quickSort = () => { \n        const sw = new Stopwatch(true);\n        setLoading(true); \n        let tmp=arr.slice();\n        let time=0;\n        let comp=0,swaps=0;\n        let  pivotPoints=new Set();\n        const pivotPoint=(s,e)=>{\n            \n             let k=s-1;\n             let j=s;\n\n             setTimeout(() => {\n                for(var i=0;i<size;i++)\n                if(!pivotPoints.has(i))\n                  document.getElementById(`bar${i}`).style.backgroundColor = \"#FFBCBC\";\n                  document.getElementById(`bar${e}`).style.backgroundColor =  \"red\";\n            }, time+=lap);\n\n             while(j<e){\n                 comp++;\n                if(tmp[j]<tmp[e]){\n                     k++;\n                     let temp=tmp[j];\n                     tmp[j]=tmp[k];\n                     tmp[k]=temp;\n                     swaps++;\n                }\n                 j++;\n             }\n              k=k+1;\n              let temp=tmp[e];\n              tmp[e]=tmp[k];\n              tmp[k]=temp;\n              swaps++;\n            let newArray=tmp.slice();\n            setTimeout(() => {\n                pivotPoints.add(k);\n                for (let pivot of pivotPoints)\n                  document.getElementById(`bar${pivot}`).style.backgroundColor =  \"#0C4271\";\n                setArray(newArray); \n                  \n            }, time+=lap);\n           \n            return k;\n        }\n        \n        const quick = (s,e) => {  \n            if(s>=e)return;\n            let m=pivotPoint(s,e);\n            quick(s,m-1);\n            quick(m+1,e);\n        }\n        \n        quick(0,tmp.length-1);\n           \n         setTimeout(() => {\n            for(var i=0;i<size;i++)\n               document.getElementById(`bar${i}`).style.backgroundColor = \"#FFBCBC\";\n            setLoading(false);   \n            sw.stop();\n            const delta = sw.read();\n            notify('Quick',comp,swaps,millisToMinutesAndSeconds(Math.ceil(delta)) ); \n        }, time+lap);\n    }\n  \n\n    return (\n        <div>\n            <Header genRandomArray={genRandomArray} bubbleSort={bubbleSort} setTime={setTime} insertionSort={insertionSort} selectionSort={selectionSort} mergeSort={mergeSort} quickSort={quickSort} loading={loading}/>\n            <div  className=\"flex-container\"   style={{height:'400px'}}>\n                {arr.map((item,index) => <Bar height={item} index={index}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Container;\n","import React from \"react\"\nimport Container from \"./components/Container\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <ToastContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}